<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.0.6</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.staimov</groupId>
	<artifactId>text-quest</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>text-quest</name>
	<description>Text Quest</description>
	<properties>
		<java.version>17</java.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.0.1</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals><goal>copy-dependencies</goal></goals>
					</execution>
				</executions>
			</plugin>


			<!--
			Для того, чтобы изменить палитру цветов в Bootstrap:
			 1. установим менеджер пакетов npm;
			 2. с помощью npm скачаем исходники bootstrap;
			 3. скомпилируем исходники Bootstrap в css-файл
			    c учетом новой цветовой палитры, заданной в файле custom_bootstrap.scss
			-->

			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<!-- Use the latest released version:
                https://repo1.maven.org/maven2/com/github/eirslett/frontend-maven-plugin/ -->
				<version>1.12.1</version>

				<executions>
					<execution>
						<!-- optional: you don't really need execution ids, but it looks nice in your build log. -->
						<id>install node and npm</id>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
						<!-- optional: default phase is "generate-resources" -->
						<phase>generate-resources</phase>
					</execution>

					<execution>
						<id>npm install</id>
						<goals>
							<goal>npm</goal>
						</goals>

						<!-- optional: default phase is "generate-resources" -->
						<phase>generate-resources</phase>

						<configuration>
							<!-- optional: The default argument is actually
                            "install", so unless you need to run some other npm command,
                            you can remove this whole <configuration> section.
                            -->
							<arguments>install bootstrap</arguments>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<nodeVersion>v4.6.0</nodeVersion>
					<!-- downloadRoot is optional: where to download node and npm from.
					Default downloadRoot to https://nodejs.org/dist/ -->
				</configuration>
			</plugin>

			<plugin>
				<groupId>io.github.cleydyr</groupId>
				<artifactId>dart-sass-maven-plugin</artifactId>
				<version>1.1.0</version>
				<executions>
					<execution>
						<id>generate-css-using-sass</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>compile-sass</goal>
						</goals>
						<configuration>
							<inputFolder>./custom-bootstrap</inputFolder>
							<outputFolder>./src/main/resources/static/css</outputFolder>
							<noSourceMap>true</noSourceMap>
							<style>COMPRESSED</style>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

</project>
